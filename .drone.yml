---
kind: pipeline
name: test

platform:
  os: linux
  arch: amd64

steps:
- name: staticcheck
  image: golang:1.14
  commands:
  - go run honnef.co/go/tools/cmd/staticcheck ./...
  volumes:
  - name: gopath
    path: /go

- name: lint
  image: golang:1.14
  commands:
  - go run golang.org/x/lint/golint -set_exit_status ./...
  volumes:
  - name: gopath
    path: /go

- name: vet
  image: golang:1.14
  commands:
  - go vet ./...
  volumes:
  - name: gopath
    path: /go

- name: test
  image: golang:1.14
  commands:
  - go test -cover ./...
  volumes:
  - name: gopath
    path: /go

volumes:
- name: gopath
  temp: {}

trigger:
  ref:
  - refs/heads/master
  - refs/tags/**
  - refs/pull/**

---
kind: pipeline
name: build-binaries

platform:
  os: linux
  arch: amd64

steps:
- name: build
  image: techknowlogick/xgo:go-1.14.x
  commands:
  - "[ -z \"${DRONE_TAG}\" ] && BUILD_VERSION=${DRONE_COMMIT_SHA:0:8} || BUILD_VERSION=${DRONE_TAG##v}"
  - mkdir -p release/
  - cd cmd/drone-github-comment && xgo -ldflags "-s -w -X main.Version=$BUILD_VERSION" -tags netgo -targets 'linux/amd64,linux/arm-6,linux/arm64' -out drone-github-comment .
  - ls -la /build/
  - mv /build/* /drone/src/release/

- name: executable
  image: alpine
  commands:
  - $(find release/ -executable -type f | grep drone-github-comment-linux-amd64) --help

- name: compress
  image: alpine
  commands:
  - apk add upx
  - find release/ -maxdepth 1 -executable -type f -exec upx {} \;
  - ls -lh release/

- name: checksum
  image: alpine
  commands:
  - cd release/ && sha256sum * > sha256sum.txt

trigger:
  ref:
  - refs/heads/master
  - refs/tags/**
  - refs/pull/**

depends_on:
- test

---
kind: pipeline
name: build-container-amd64

platform:
  os: linux
  arch: amd64

steps:
- name: build
  image: golang:1.14
  commands:
  - go build -v -ldflags "-X main.version=${DRONE_TAG:-latest}" -a -tags netgo -o release/amd64/drone-github-comment ./cmd/drone-github-comment

- name: dryrun
  image: plugins/docker:18-linux-amd64
  settings:
    dockerfile: docker/Dockerfile.amd64
    dry_run: true
    password:
      from_secret: docker_password
    repo: thegeeklab/${DRONE_REPO_NAME}
    username:
      from_secret: docker_username
  when:
    ref:
    - refs/pull/**
  depends_on:
  - build

- name: publish-dockerhub
  image: plugins/docker:18-linux-amd64
  settings:
    auto_tag: true
    auto_tag_suffix: amd64
    dockerfile: docker/Dockerfile.amd64
    password:
      from_secret: docker_password
    repo: thegeeklab/${DRONE_REPO_NAME}
    username:
      from_secret: docker_username
  when:
    ref:
    - refs/heads/master
    - refs/tags/**
  depends_on:
  - dryrun

- name: publish-quay
  image: plugins/docker:18-linux-amd64
  settings:
    auto_tag: true
    auto_tag_suffix: amd64
    dockerfile: docker/Dockerfile.amd64
    password:
      from_secret: quay_password
    registry: quay.io
    repo: quay.io/thegeeklab/${DRONE_REPO_NAME}
    username:
      from_secret: quay_username
  when:
    ref:
    - refs/heads/master
    - refs/tags/**
  depends_on:
  - dryrun

trigger:
  ref:
  - refs/heads/master
  - refs/tags/**
  - refs/pull/**

depends_on:
- test

---
kind: pipeline
name: build-container-arm64

platform:
  os: linux
  arch: arm64

steps:
- name: build
  image: golang:1.14
  commands:
  - go build -v -ldflags "-X main.version=${DRONE_TAG:-latest}" -a -tags netgo -o release/arm64/drone-github-comment ./cmd/drone-github-comment

- name: dryrun
  image: plugins/docker:18-linux-arm64
  settings:
    dockerfile: docker/Dockerfile.arm64
    dry_run: true
    password:
      from_secret: docker_password
    repo: thegeeklab/${DRONE_REPO_NAME}
    username:
      from_secret: docker_username
  when:
    ref:
    - refs/pull/**
  depends_on:
  - build

- name: publish-dockerhub
  image: plugins/docker:18-linux-arm64
  settings:
    auto_tag: true
    auto_tag_suffix: arm64
    dockerfile: docker/Dockerfile.arm64
    password:
      from_secret: docker_password
    repo: thegeeklab/${DRONE_REPO_NAME}
    username:
      from_secret: docker_username
  when:
    ref:
    - refs/heads/master
    - refs/tags/**
  depends_on:
  - dryrun

- name: publish-quay
  image: plugins/docker:18-linux-arm64
  settings:
    auto_tag: true
    auto_tag_suffix: arm64
    dockerfile: docker/Dockerfile.arm64
    password:
      from_secret: quay_password
    registry: quay.io
    repo: quay.io/thegeeklab/${DRONE_REPO_NAME}
    username:
      from_secret: quay_username
  when:
    ref:
    - refs/heads/master
    - refs/tags/**
  depends_on:
  - dryrun

trigger:
  ref:
  - refs/heads/master
  - refs/tags/**
  - refs/pull/**

depends_on:
- test

---
kind: pipeline
name: build-container-arm

platform:
  os: linux
  arch: arm

steps:
- name: build
  image: golang:1.14
  commands:
  - go build -v -ldflags "-X main.version=${DRONE_TAG:-latest}" -a -tags netgo -o release/arm/drone-github-comment ./cmd/drone-github-comment

- name: dryrun
  image: plugins/docker:18-linux-arm
  settings:
    dockerfile: docker/Dockerfile.arm
    dry_run: true
    password:
      from_secret: docker_password
    repo: thegeeklab/${DRONE_REPO_NAME}
    username:
      from_secret: docker_username
  when:
    ref:
    - refs/pull/**
  depends_on:
  - build

- name: publish-dockerhub
  image: plugins/docker:18-linux-arm
  settings:
    auto_tag: true
    auto_tag_suffix: arm
    dockerfile: docker/Dockerfile.arm
    password:
      from_secret: docker_password
    repo: thegeeklab/${DRONE_REPO_NAME}
    username:
      from_secret: docker_username
  when:
    ref:
    - refs/heads/master
    - refs/tags/**
  depends_on:
  - dryrun

- name: publish-quay
  image: plugins/docker:18-linux-arm
  settings:
    auto_tag: true
    auto_tag_suffix: arm
    dockerfile: docker/Dockerfile.arm
    password:
      from_secret: quay_password
    registry: quay.io
    repo: quay.io/thegeeklab/${DRONE_REPO_NAME}
    username:
      from_secret: quay_username
  when:
    ref:
    - refs/heads/master
    - refs/tags/**
  depends_on:
  - dryrun

trigger:
  ref:
  - refs/heads/master
  - refs/tags/**
  - refs/pull/**

depends_on:
- test

---
kind: pipeline
name: notifications

platform:
  os: linux
  arch: amd64

steps:
- name: manifest-dockerhub
  image: plugins/manifest
  settings:
    auto_tag: true
    ignore_missing: true
    password:
      from_secret: docker_password
    spec: docker/manifest.tmpl
    username:
      from_secret: docker_username
  when:
    status:
    - success

- name: manifest-quay
  image: plugins/manifest
  settings:
    auto_tag: true
    ignore_missing: true
    password:
      from_secret: quay_password
    spec: docker/manifest-quay.tmpl
    username:
      from_secret: quay_username
  when:
    status:
    - success

- name: pushrm-dockerhub
  image: chko/docker-pushrm:1
  environment:
    DOCKER_PASS:
      from_secret: docker_password
    DOCKER_USER:
      from_secret: docker_username
    PUSHRM_FILE: README.md
    PUSHRM_SHORT: Drone CI - Plugin to add comments to GitHub Issues/PRs
    PUSHRM_TARGET: thegeeklab/${DRONE_REPO_NAME}
  when:
    status:
    - success

- name: pushrm-quay
  image: chko/docker-pushrm:1
  environment:
    APIKEY__QUAY_IO:
      from_secret: quay_token
    PUSHRM_FILE: README.md
    PUSHRM_TARGET: quay.io/thegeeklab/${DRONE_REPO_NAME}
  when:
    status:
    - success

- name: matrix
  image: plugins/matrix
  settings:
    homeserver:
      from_secret: matrix_homeserver
    password:
      from_secret: matrix_password
    roomid:
      from_secret: matrix_roomid
    template: "Status: **{{ build.status }}**<br/> Build: [{{ repo.Owner }}/{{ repo.Name }}]({{ build.link }}) ({{ build.branch }}) by {{ build.author }}<br/> Message: {{ build.message }}"
    username:
      from_secret: matrix_username
  when:
    status:
    - success
    - failure

trigger:
  ref:
  - refs/heads/master
  - refs/tags/**
  status:
  - success
  - failure

depends_on:
- build-binaries
- build-container-amd64
- build-container-arm
- build-container-arm64

---
kind: signature
hmac: 14cc8682d5c27ee5548f9596f5778b82f331b5c2d5e2a816b874ae7682524335

...
